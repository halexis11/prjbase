// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace prjbase.Models
{
    public partial class CentroEducativo
    {
        public CentroEducativo()
        {
            NotaRemision = new HashSet<NotaRemision>();
            ProgramacionCentroEducativo = new HashSet<ProgramacionCentroEducativo>();
            ProgramacionProductoDetalle = new HashSet<ProgramacionProductoDetalle>();
        }

        [StringLength(20)]
        public string Id { get; set; }
        [Display(Name = "Departamento")]
        [Required(ErrorMessage = "El departamento es requerido")]
        [Range(1, int.MaxValue, ErrorMessage = "Departamento no registrado")]
        public int IdDepartamento { get; set; }
        [Display(Name = "Municipio")]
        [Required(ErrorMessage = "El municipio es requerido")]
        [Range(1, int.MaxValue, ErrorMessage = "Municipio no registrado")]
        public int IdMunicipio { get; set; }
        [Display(Name = "Distrito")]
        public int IdDistrito { get; set; }
        [Display(Name = "Bodega")]
        public int? IdBodega { get; set; }
        [Display(Name = "Zona")]
        public int IdZona { get; set; }
        [Required(ErrorMessage ="El nivel es requerido")]
        [StringLength(40)]
        [Display(Name = "Nivel")]
        public string Nivel { get; set; }
        [Required(ErrorMessage ="El nombre es requerido")]
        [StringLength(200)]
        public string Nombre { get; set; }
        [Required(ErrorMessage ="La dirección es requerida")]
        [StringLength(250)]
        [Display(Name = "Dirección")]
        public string Direccion { get; set; }
        [StringLength(64)]
        [Display(Name = "Teléfono")]
        public string Telefono { get; set; }
        [Required]
        public bool? Estado { get; set; }
        [StringLength(100)]
        [Display(Name = "Persona de Contacto")]
        public string NombreContacto { get; set; }
        [StringLength(150)]
        [Display(Name = "Email de Contacto")]
        [EmailAddress(ErrorMessage ="Favor ingresar una dirección de correo válida.")]
        public string CorreoContacto { get; set; }
        [StringLength(14)]
        [Display(Name = "Teléfono de Contacto")]
        public string TelefonoContacto { get; set; }
        [Display(Name = "Niños")]
        [Range(0, int.MaxValue, ErrorMessage = "La cantidad no puede ser negativa.")]
        public int Ninos { get; set; } = 0;
        [Display(Name = "Niñas")]
        [Range(0, int.MaxValue, ErrorMessage = "La cantidad no puede ser negativa.")]
        public int Ninas { get; set; } = 0;
        [Range(1, int.MaxValue, ErrorMessage = "La cantidad debe ser mayor que cero.")]
        public int Total { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime FechaCreacion { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime FechaModificacion { get; set; }

        [ForeignKey("IdBodega")]
        [InverseProperty("CentroEducativo")]
        [Display(Name = "Bodega")]
        public virtual Bodega IdBodegaNavigation { get; set; }
        [ForeignKey("IdDepartamento")]
        [InverseProperty("CentroEducativo")]
        [Display(Name = "Departamento")]
        public virtual Departamento IdDepartamentoNavigation { get; set; }
        [ForeignKey("IdDistrito")]
        [InverseProperty("CentroEducativo")]
        [Display(Name = "Distrito")]
        public virtual Distrito IdDistritoNavigation { get; set; }
        [ForeignKey("IdMunicipio")]
        [InverseProperty("CentroEducativo")]
        [Display(Name = "Municipio")]
        public virtual Municipio IdMunicipioNavigation { get; set; }
        [ForeignKey("IdZona")]
        [InverseProperty("CentroEducativo")]
        [Display(Name = "Zona")]
        public virtual Zona IdZonaNavigation { get; set; }
        [InverseProperty("IdCentroEducativoNavigation")]
        public virtual ICollection<NotaRemision> NotaRemision { get; set; }
        [InverseProperty("IdCentroEducativoNavigation")]
        public virtual ICollection<ProgramacionCentroEducativo> ProgramacionCentroEducativo { get; set; }
        [InverseProperty("IdCentroEducativoNavigation")]
        public virtual ICollection<ProgramacionProductoDetalle> ProgramacionProductoDetalle { get; set; }
    }
}